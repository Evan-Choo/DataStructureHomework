Task 1
－－－－－－－－－－－－－－－－
在task 1中我使用了数据结构stack，当一个节点存在左孩子时，将它压入栈，如此循环。到没有左孩子的节点时，就检查栈是否为空，如果不空，就将栈顶打印出来，并弹出。将此时的节点变成栈顶节点的右孩子。当p或者栈为空的时候就停止循环，中序遍历结束。

Task 2
－－－－－－－－－－－－－－－－
在构建二叉树的函数中没有使用特殊的数据结构。用stringIndex和nodesIndex来记录当前在字符数组和节点数组中的位置。首先为输入字符串的第一个字符创建相应的根节点，然后stringIndex，nodesIndex加一。在stringIndex所对应的字符不是‘\0’的时候循环，首先创建stringIndex所对应字符的BitreeNode，然后判断stringIndex＋3对应的字符是否是‘）’，如果是，根据L或R来创建相应父节点的子节点。如果不是，就创建相应父节点的左孩子或右孩子。

Task 3
－－－－－－－－－－－－－－－－
从数组的最后一个元素开始创建节点。创建一个int类型的cur变量，如果cur＊2，即左节点编号，小于数组size，则将当前节点的左孩子设置为cur＊2所对应的节点；右节点类似。

Task 4
－－－－－－－－－－－－－－－－
用了两个queue来存放相邻两个layer的节点。首先将root节点放入queue1，打印queue1内容，当queue1不空时，将front的所有子节点放入queue2。再打印queue2内容，当queue2不空时，将queue2的front所有子节点放入queue1。当queue1和queue2同时为空时，结束循环。